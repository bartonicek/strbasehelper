tab3[, 1]
gsub("^(\\d{2}\\.\\d+).+$", '\\1', tab3[, 1])
tab3[, 1]
gsub("^(\\d{2}\\.\\d+).+$", '\\1', tab3[, 1, drop = TRUE])
gsub("^(\\d{2}).+$", '\\1', tab3[, 1, drop = TRUE])
gsub("^(\\d{2}\\.\\d+)\s.+$", '\\1', tab3[, 1, drop = TRUE])
gsub("^(\\d{2}\\.\\d+)\w.+$", '\\1', tab3[, 1, drop = TRUE])
?gsub
gsub("^(\\d{2}\\.\\d+)[:space:].+$", '\\1', tab3[, 1, drop = TRUE])
gsub("^(\\d{2}\\.\\d+)[:blank:].+$", '\\1', tab3[, 1, drop = TRUE])
gsub("^(\\d{2}\\.)[:blank:].+$", '\\1', tab3[, 1, drop = TRUE])
gsub("^(\\d{2})[:blank:].+$", '\\1', tab3[, 1, drop = TRUE])
gsub("^(\\d{2}).+$", '\\1', tab3[, 1, drop = TRUE])
gsub("^(\\d{2}\\.).+$", '\\1', tab3[, 1, drop = TRUE])
gsub("^(\\d{2}\\.\\d).+$", '\\1', tab3[, 1, drop = TRUE])
gsub("^(\\d{2}\\.\\d)[:blank:].+$", '\\1', tab3[, 1, drop = TRUE])
gsub("^(\\d{2}\\.\\d) .+$", '\\1', tab3[, 1, drop = TRUE])
gsub("^(\\d{2}) .+$", '\\1', tab3[, 1, drop = TRUE])
gsub("^(\\d{2}).+$", '\\1', tab3[, 1, drop = TRUE])
gsub("^(\\d{2}).+$", '\\1', tab3[, 1, drop = TRUE])
gsub("^(\\d{2}) .+$", '\\1', tab3[, 1, drop = TRUE])
gsub("^(\\d{2})[[:space:]].+$", '\\1', tab3[, 1, drop = TRUE])
gsub("^(\\d{2}\\.)[[:space:]].+$", '\\1', tab3[, 1, drop = TRUE])
gsub("^(\\d{2})[[:space:]].+$", '\\1', tab3[, 1, drop = TRUE])
gsub("^(\\d{2}\\d*)[[:space:]].+$", '\\1', tab3[, 1, drop = TRUE])
gsub("^(\\d{2}\\.\\d*)[[:space:]].+$", '\\1', tab3[, 1, drop = TRUE])
grep("^(\\d{2}\\.\\d*)[[:space:]].+$", tab3[, 1, drop = TRUE], value = TRUE)
grep("^\\d{2}\\.\\d*", tab3[, 1, drop = TRUE], value = TRUE)
tab3[, ]
tab3[, 1]
tab3[, 1, drop = TRUE]
grep("^\\d{2}\\.\\d*", tab3[, 1, drop = TRUE], value = TRUE)
grep("^\\d{2}\\.*\\d*", tab3[, 1, drop = TRUE], value = TRUE)
grep("^\\d{2}\\.?\\d*", tab3[, 1, drop = TRUE], value = TRUE)
grep("^\\d{2}\\.?\\d*", tab3[, 1, drop = TRUE], value = TRUE, perl = TRUE)
grep("^\\d{2}", tab3[, 1, drop = TRUE], value = TRUE, perl = TRUE)
grep("^\\d{2}\\.?\\d*", tab3[, 1, drop = TRUE], value = TRUE, perl = TRUE)
grep("^\\d{2}$", tab3[, 1, drop = TRUE], value = TRUE, perl = TRUE)
grep("^\\d{2}\\.?\\d*$", tab3[, 1, drop = TRUE], value = TRUE, perl = TRUE)
gsub("^\\d{2}\\.?\\d*$", "\\1", tab3[, 1, drop = TRUE])
gsub("^(\\d{2}\\.?\\d*)$", "\\1", tab3[, 1, drop = TRUE])
gsub("^(\\d{2}\\.?\\d*)", "\\1", tab3[, 1, drop = TRUE])
gsub("^(\\d{2}\\.?\\d?)", "\\1", tab3[, 1, drop = TRUE])
gsub("^(\\d{2}\\.?\\d?)[[:blank:]].*$", "\\1", tab3[, 1, drop = TRUE])
gsub("^(\\d{2}\\.?\\d?)[[:punct:]][[:blank:]].*$", "\\1", tab3[, 1, drop = TRUE])
gsub("^(\\d{2}\\.?\\d?)[[:blank:]].*$", "\\1", tab3[, 1, drop = TRUE])
gsub("^(\\d{2}\\.?\\d?).*[[:blank:]].*$", "\\1", tab3[, 1, drop = TRUE])
lenght(tab3[, 1, drop = TRUE])
length(tab3[, 1, drop = TRUE])
gsub("^(\\d{2}\\.?\\d?).*[[:blank:]].*$", "\\1", tab3[, 1, drop = TRUE])
devtools::load_all()
profileManager <- ProfileManager$new(profile_data_long)
profileManager$fetch_strbase_tables("VWA")
profileManager$extract_basepairs()
profileManager$profile_data %>%
filter(locus == "VWA")
devtools::load_all()
profileManager <- ProfileManager$new(profile_data_long)
profileManager$fetch_strbase_tables()
profileManager$extract_basepairs()
ggplot(profileManager$profile_data, aes(x = base_pairs, y = n, label = locus)) +
geom_col() +
facet_wrap(~ colour, nrow = 3)
x <- data2$base_pairs
oo <- order(x)
x <- x[oo]
y <- data2$n[oo]
x2 <- as.numeric(rbind(x - 1, x, x + 1))
y2 <- as.numeric(rbind(0, y, 0))
x2
y2
data1 <- profileManager$profile_data
data2 <- data1 %>%
filter(colour == "blue")
data2 %>% arrange(base_pairs)
x <- data2$base_pairs
oo <- order(x)
x <- x[oo]
y <- data2$n[oo]
x2 <- as.numeric(rbind(x - 1, x, x + 1))
y2 <- as.numeric(rbind(0, y, 0))
x2
y2
plot(x2, y2, type = "l")
y2 <- as.numeric(rbind(0, y / 2, y, y / 2, 0))
x2
y2
plot(x2, y2, type = "l")
x2 <- as.numeric(rbind(x - 2, x - 1, x, x + 1, x + 2))
y2 <- as.numeric(rbind(0, y / 2, y, y / 2, 0))
plot(x2, y2, type = "l")
x2 <- as.numeric(rbind(x - 2, x - 1, x, x + 1, x + 2))
y2 <- as.numeric(rbind(0, y / 4, y, y / 4, 0))
plot(x2, y2, type = "l")
data2 <- data1 %>%
filter(colour == "yellow")
data2 %>% arrange(base_pairs)
x <- data2$base_pairs
oo <- order(x)
x <- x[oo]
y <- data2$n[oo]
x2 <- as.numeric(rbind(x - 2, x - 1, x, x + 1, x + 2))
y2 <- as.numeric(rbind(0, y / 4, y, y / 4, 0))
plot(x2, y2, type = "l")
data2 <- data1 %>%
filter(colour == "green")
data2 %>% arrange(base_pairs)
x <- data2$base_pairs
oo <- order(x)
x <- x[oo]
y <- data2$n[oo]
x2 <- as.numeric(rbind(x - 2, x - 1, x, x + 1, x + 2))
y2 <- as.numeric(rbind(0, y / 4, y, y / 4, 0))
plot(x2, y2, type = "l")
StatAlleleSpike <- ggplot2::ggproto("StatAlleleSpike",
compute_group = function(data, scales) {
x <- data$x
y <- data$y
x2 <- as.numeric(rbind(x - 2, x - 1, x, x + 1, x + 2))
y2 <- as.numeric(rbind(0, y / 4, y, y / 4, 0))
data.frame(x = x2, y = y2)
})
StatAlleleSpike <- ggplot2::ggproto("StatAlleleSpike",
compute_group = function(data, scales) {
x <- data$x
y <- data$y
x2 <- as.numeric(rbind(x - 2, x - 1, x, x + 1, x + 2))
y2 <- as.numeric(rbind(0, y / 4, y, y / 4, 0))
data.frame(x = x2, y = y2)
},
required_aes = c("x", "y"))
stat_allele_spike <- function(mapping = NULL, data = NULL, geom = "line",
position = "identity", na.rm = FALSE,
show.legend = NA, inherit.aes = TRUE, ...) {
ggplot2::layer(
stat = StatAlleleSpike,
data = data,
mapping = mapping,
geom = geom,
position = position,
show.legend = show.legend,
inherit.aes = inherit.aes,
params = list(na.rm = na.rm, ...)
)
}
ggplot(profileManager$profile_data, aes(x = base_pairs, y = n, label = locus)) +
stat_allele_spike() +
facet_wrap(~ colour, nrow = 3)
StatAlleleSpike <- ggplot2::ggproto("StatAlleleSpike",
compute_group = function(data, scales) {
x <- data$x
y <- data$y
x2 <- as.numeric(rbind(x - 2, x - 1, x, x + 1, x + 2))
y2 <- as.numeric(rbind(0, y / 4, y, y / 4, 0))
data.frame(x = x2, y = y2)
},
required_aes = c("x", "y"))
stat_allele_spike <- function(mapping = NULL, data = NULL, geom = "line",
position = "identity", na.rm = FALSE,
show.legend = NA, inherit.aes = TRUE, ...) {
ggplot2::layer(
stat = StatAlleleSpike,
data = data,
mapping = mapping,
geom = geom,
position = position,
show.legend = show.legend,
inherit.aes = inherit.aes,
params = list(na.rm = na.rm, ...)
)
}
ggplot(profileManager$profile_data, aes(x = base_pairs, y = n, label = locus)) +
stat_allele_spike() +
facet_wrap(~ colour, nrow = 3)
stat_allele_spike <- function(mapping = NULL, data = NULL, geom = "line",
position = "identity", na.rm = FALSE,
show.legend = NA, inherit.aes = TRUE, ...) {
ggplot2::layer(
stat = "StatAlleleSpike",
data = data,
mapping = mapping,
geom = geom,
position = position,
show.legend = show.legend,
inherit.aes = inherit.aes,
params = list(na.rm = na.rm, ...)
)
}
ggplot(profileManager$profile_data, aes(x = base_pairs, y = n)) +
stat_allele_spike() +
facet_wrap(~ colour, nrow = 3)
stat_allele_spike <- function(mapping = NULL, data = NULL, geom = "line",
position = "identity", na.rm = FALSE,
show.legend = NA, inherit.aes = TRUE, ...) {
ggplot2::layer(
stat = StatAlleleSpike,
data = data,
mapping = mapping,
geom = geom,
position = position,
show.legend = show.legend,
inherit.aes = inherit.aes,
params = list(na.rm = na.rm, ...)
)
}
ggplot(profileManager$profile_data, aes(x = base_pairs, y = n)) +
stat_allele_spike() +
facet_wrap(~ colour, nrow = 3)
stat_allele_spike <- function(mapping = NULL, data = NULL, geom = "line",
position = "identity", na.rm = FALSE,
show.legend = NA, inherit.aes = TRUE, ...) {
ggplot2::layer(
geom = geom,
stat = StatAlleleSpike,
data = data,
mapping = mapping,
position = position,
show.legend = show.legend,
inherit.aes = inherit.aes,
params = list(na.rm = na.rm, ...)
)
}
ggplot(profileManager$profile_data, aes(x = base_pairs, y = n)) +
stat_allele_spike() +
facet_wrap(~ colour, nrow = 3)
StatAlleleSpike <- ggplot2::ggproto("StatAlleleSpike", Stat,
compute_group = function(data, scales) {
x <- data$x
y <- data$y
x2 <- as.numeric(rbind(x - 2, x - 1, x, x + 1, x + 2))
y2 <- as.numeric(rbind(0, y / 4, y, y / 4, 0))
data.frame(x = x2, y = y2)
},
required_aes = c("x", "y"))
stat_allele_spike <- function(mapping = NULL, data = NULL, geom = "line",
position = "identity", na.rm = FALSE,
show.legend = NA, inherit.aes = TRUE, ...) {
ggplot2::layer(
geom = geom,
stat = StatAlleleSpike,
data = data,
mapping = mapping,
position = position,
show.legend = show.legend,
inherit.aes = inherit.aes,
params = list(na.rm = na.rm, ...)
)
}
ggplot(profileManager$profile_data, aes(x = base_pairs, y = n)) +
stat_allele_spike() +
facet_wrap(~ colour, nrow = 3)
StatAlleleSpike <- ggplot2::ggproto("StatAlleleSpike", Stat,
compute_group = function(data, scales) {
x <- data$x
y <- data$y
x2 <- c(0, as.numeric(rbind(x - 2, x - 1, x, x + 1, x + 2)), 450)
y2 <- c(0, as.numeric(rbind(0, y / 4, y, y / 4, 0)), 0)
data.frame(x = x2, y = y2)
},
required_aes = c("x", "y"))
stat_allele_spike <- function(mapping = NULL, data = NULL, geom = "line",
position = "identity", na.rm = FALSE,
show.legend = NA, inherit.aes = TRUE, ...) {
ggplot2::layer(
geom = geom,
stat = StatAlleleSpike,
data = data,
mapping = mapping,
position = position,
show.legend = show.legend,
inherit.aes = inherit.aes,
params = list(na.rm = na.rm, ...)
)
}
ggplot(profileManager$profile_data, aes(x = base_pairs, y = n)) +
stat_allele_spike() +
facet_wrap(~ colour, nrow = 3)
ggplot(profileManager$profile_data, aes(x = base_pairs, y = n)) +
geom_line(stat = "stat_allele_spike") +
facet_wrap(~ colour, nrow = 3)
ggplot(profileManager$profile_data, aes(x = base_pairs, y = n)) +
geom_line(stat = "allele_spike") +
facet_wrap(~ colour, nrow = 3)
ggplot(profileManager$profile_data, aes(x = base_pairs, y = n)) +
geom_line(stat = "allele_spike") +
facet_wrap(~ colour, nrow = 3)
ggplot(profileManager$profile_data, aes(x = base_pairs, y = n)) +
geom_col() +
#geom_line(stat = "allele_spike") +
facet_wrap(~ colour, nrow = 3)
ggplot(profileManager$profile_data, aes(x = base_pairs, y = n)) +
geom_line(stat = "allele_spike") +
facet_wrap(~ colour, nrow = 3)
StatAlleleSpike <- ggplot2::ggproto("StatAlleleSpike", Stat,
compute_group = function(data, scales) {
x <- data$x
y <- data$y
x2 <- c(as.numeric(rbind(x - 2, x - 1, x, x + 1, x + 2)),)
y2 <- c(as.numeric(rbind(0, y / 4, y, y / 4, 0)))
data.frame(x = x2, y = y2)
},
required_aes = c("x", "y"))
stat_allele_spike <- function(mapping = NULL, data = NULL, geom = "line",
position = "identity", na.rm = FALSE,
show.legend = NA, inherit.aes = TRUE, ...) {
ggplot2::layer(
geom = geom,
stat = StatAlleleSpike,
data = data,
mapping = mapping,
position = position,
show.legend = show.legend,
inherit.aes = inherit.aes,
params = list(na.rm = na.rm, ...)
)
}
ggplot(profileManager$profile_data, aes(x = base_pairs, y = n)) +
geom_line(stat = "allele_spike") +
facet_wrap(~ colour, nrow = 3)
StatAlleleSpike <- ggplot2::ggproto("StatAlleleSpike", Stat,
compute_group = function(data, scales) {
x <- data$x
y <- data$y
x2 <- as.numeric(rbind(x - 2, x - 1, x, x + 1, x + 2))
y2 <- as.numeric(rbind(0, y / 4, y, y / 4, 0))
data.frame(x = x2, y = y2)
},
required_aes = c("x", "y"))
stat_allele_spike <- function(mapping = NULL, data = NULL, geom = "line",
position = "identity", na.rm = FALSE,
show.legend = NA, inherit.aes = TRUE, ...) {
ggplot2::layer(
geom = geom,
stat = StatAlleleSpike,
data = data,
mapping = mapping,
position = position,
show.legend = show.legend,
inherit.aes = inherit.aes,
params = list(na.rm = na.rm, ...)
)
}
ggplot(profileManager$profile_data, aes(x = base_pairs, y = n)) +
geom_line(stat = "allele_spike") +
facet_wrap(~ colour, nrow = 3)
usethis::use_r("stat_allele_spike")
devtools::load_all()
ggplot(profileManager$profile_data, aes(x = base_pairs, y = n)) +
geom_line(stat = "allele_spike") +
facet_wrap(~ colour, nrow = 3)
profile_data <- as.data.frame(readxl::read_excel("Profiles.xlsx"))
names(profile_data) <- tolower(names(profile_data))
rownames(profile_data) <- profile_data$locus
counts_list <- apply(profile_data[, -c(1, 6)], 1, table)
loci <- profile_data$locus
profile_data_long <- profile_data |>
tidyr::pivot_longer(a1:b2, values_to = "allele") |>
dplyr::select(-name) |>
dplyr::group_by(locus, colour) |>
dplyr::count(allele) |>
dplyr::ungroup()
devtools::load_all()
profileManager <- ProfileManager$new(profile_data_long)
profileManager$fetch_strbase_tables()
profileManager$extract_basepairs()
devtools::load_all()
ggplot(profileManager$profile_data, aes(x = base_pairs, y = n)) +
geom_line(stat = "allele_spike") +
facet_wrap(~ colour, nrow = 3)
View(profileManager$profile_data)
devtools::install()
devtools::install()
library(strbasehelper)
library(strbasehelper)
profile_data <- as.data.frame(readxl::read_excel("Profiles.xlsx"))
names(profile_data) <- tolower(names(profile_data))
rownames(profile_data) <- profile_data$locus
counts_list <- apply(profile_data[, -c(1, 6)], 1, table)
loci <- profile_data$locus
profile_data_long <- profile_data |>
tidyr::pivot_longer(a1:b2, values_to = "allele") |>
dplyr::select(-name) |>
dplyr::group_by(locus, colour) |>
dplyr::count(allele) |>
dplyr::ungroup()
devtools::install()
profileManager <- ProfileManager$new(profile_data_long)
library(strbasehelper)
profile_data <- as.data.frame(readxl::read_excel("Profiles.xlsx"))
names(profile_data) <- tolower(names(profile_data))
rownames(profile_data) <- profile_data$locus
counts_list <- apply(profile_data[, -c(1, 6)], 1, table)
loci <- profile_data$locus
profile_data_long <- profile_data |>
tidyr::pivot_longer(a1:b2, values_to = "allele") |>
dplyr::select(-name) |>
dplyr::group_by(locus, colour) |>
dplyr::count(allele) |>
dplyr::ungroup()
profileManager <- ProfileManager$new(profile_data_long)
library(strbasehelper)
profile_data <- as.data.frame(readxl::read_excel("Profiles.xlsx"))
names(profile_data) <- tolower(names(profile_data))
rownames(profile_data) <- profile_data$locus
counts_list <- apply(profile_data[, -c(1, 6)], 1, table)
loci <- profile_data$locus
profile_data_long <- profile_data |>
tidyr::pivot_longer(a1:b2, values_to = "allele") |>
dplyr::select(-name) |>
dplyr::group_by(locus, colour) |>
dplyr::count(allele) |>
dplyr::ungroup()
profileManager <- ProfileManager$new(profile_data_long)
devtools::document()
devtools::install()
library(strbasehelper)
profile_data <- as.data.frame(readxl::read_excel("Profiles.xlsx"))
names(profile_data) <- tolower(names(profile_data))
rownames(profile_data) <- profile_data$locus
counts_list <- apply(profile_data[, -c(1, 6)], 1, table)
loci <- profile_data$locus
profile_data_long <- profile_data |>
tidyr::pivot_longer(a1:b2, values_to = "allele") |>
dplyr::select(-name) |>
dplyr::group_by(locus, colour) |>
dplyr::count(allele) |>
dplyr::ungroup()
profileManager <- ProfileManager$new(profile_data_long)
profileManager$fetch_strbase_tables()
profileManager$extract_basepairs()
ggplot(profileManager$profile_data, aes(x = base_pairs, y = n)) +
geom_line(stat = "allele_spike") +
facet_wrap(~ colour, nrow = 3)
devtools::load_all()
profile_data <- as.data.frame(readxl::read_excel("Profiles.xlsx"))
names(profile_data) <- tolower(names(profile_data))
rownames(profile_data) <- profile_data$locus
counts_list <- apply(profile_data[, -c(1, 6)], 1, table)
loci <- profile_data$locus
profile_data_long <- profile_data |>
tidyr::pivot_longer(a1:b2, values_to = "allele") |>
dplyr::select(-name) |>
dplyr::group_by(locus, colour) |>
dplyr::count(allele) |>
dplyr::ungroup()
profileManager <- ProfileManager$new(profile_data_long)
profileManager$fetch_strbase_tables()
profileManager$fetch_strbase_tables()
profileManager$extract_basepairs()
devtools::load_all()
profile_data <- as.data.frame(readxl::read_excel("Profiles.xlsx"))
names(profile_data) <- tolower(names(profile_data))
rownames(profile_data) <- profile_data$locus
counts_list <- apply(profile_data[, -c(1, 6)], 1, table)
loci <- profile_data$locus
profile_data_long <- profile_data |>
tidyr::pivot_longer(a1:b2, values_to = "allele") |>
dplyr::select(-name) |>
dplyr::group_by(locus, colour) |>
dplyr::count(allele) |>
dplyr::ungroup()
profileManager <- ProfileManager$new(profile_data_long)
profileManager$fetch_strbase_tables()
profileManager$extract_basepairs()
profileManager$profile_data
profileManager$extract_basepairs()
profileManager$profile_data
profileManager$extract_basepairs()
profileManager$profile_data
View(profileManager$profile_data)
ggplot(profileManager$profile_data, aes(x = base_pairs, y = n)) +
geom_line(stat = "allele_spike") +
facet_wrap(~ colour, nrow = 3)
usethis::use_data(profile_data_long)
library(strbasehelper)
devtools::document()
devtools::install()
library(strbasehelper)
usethis::use_readme_rmd()
profile_data_long
# Start with a long dataframe with the counts of alleles
profile_data_long
# Create a ProfileManager object
profile_manager <- ProfileManager$new(profile_data_long)
# Start with profile data: a long dataframe with the counts of alleles
profile_data_long
# The object retains a copy of the profile
profile_manager$profile_data
profile_manager$extract_basepairs()
# Use the ProfileManager object to fetch data tables from STRBase
# (fetches tables for all loci in the profile by default, can supply a vector of loci),
# and automatically match base pair data with the profile data
profile_manager$fetch_strbase_tables()
# Use the ProfileManager object to fetch data tables from STRBase
# (fetches tables for all loci in the profile by default, can supply a vector of loci),
# and automatically match base pair data with the profile data
profile_manager$fetch_strbase_tables()
profile_manager$extract_basepairs()
profile_manager$extract_basepairs()
ggplot(profile_manager$profile_data, aes(x = base_pair, y = count)) +
geom_line(stat = "allele_spike")
ggplot(profile_manager$profile_data, aes(x = base_pairs, y = count)) +
geom_line(stat = "allele_spike")
ggplot(profile_manager$profile_data, aes(x = base_pairs, y = n)) +
geom_line(stat = "allele_spike")
ggplot(profile_manager$profile_data, aes(x = base_pairs, y = n)) +
geom_line(stat = "allele_spike") +
facet_wrap(~ colour)
ggplot(profile_manager$profile_data, aes(x = base_pairs, y = n)) +
geom_line(stat = "allele_spike") +
facet_wrap(~ colour, nrow = 3)
?ProfileManager
